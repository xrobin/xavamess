% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparse.extract.index.R
\name{sparse.extract.index}
\alias{sparse.extract.index}
\title{Sparse indexing of matrices}
\usage{
sparse.extract.index(
  i,
  j,
  nrow,
  ncol,
  byrow = FALSE,
  na.rm = FALSE,
  quiet = TRUE
)
}
\arguments{
\item{i, j}{the indices of the elements to extract. \code{i} and \code{j} must have the same length.}

\item{nrow, ncol}{the number of rows and colums of the index. currently, \code{ncol} is ignored with \code{byrow = FALSE}, \code{nrow} is ignored with \code{byrow = TRUE}}

\item{byrow}{only \code{FALSE} is supported for now}

\item{na.rm}{remove elements where i or j are \code{NA}}

\item{quiet}{if \code{FALSE}, prints a \code{\link{message}} before removing the missing values. If \code{TRUE}, missing values are silently removed.}
}
\value{
the vector index for the matrix. Typically one would want to use this index to \link[=Extract]{extract} from a matrix, and a vector will be returned, regardless of the status of \code{drop}.
}
\description{
Computes a matrix index that extracts individual (i, j) elements. This differ from the standard \link[=Extract]{extraction} where all columns in rows \code{i} and all rows in columns \code{j} are extracted.
}
\details{
Note that this is likely to NOT work on data frames.
}
\examples{
m <- matrix(1:25, 5, 5)
m[1:5, 1:5] # Returns the whole matrix
m[sparse.extract.index(1:5, 1:5, nrow = 5)] # Returns the diagonal only
m[c(1, 3, 5), c(2, 4, 4)]
m[sparse.extract.index(c(1, 3, 5), c(2, 4, 4), nrow = 5)]
}
